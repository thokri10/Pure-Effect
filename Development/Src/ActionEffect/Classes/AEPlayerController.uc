// THIS CLASS IS RESPONSIBLE FOR CONTROLLING THE PLAYER'S CHARACTER.
class AEPlayerController extends UTPlayerController
	dependson(AEJSONParser);

var class<AEJSONParser>     pars;
var AEJSONParser            parser;

// HUD
var AEHUD                   mHUD;
var HudLocalizedMessage     message;
var int                     credits;

// Print out our textmenu on the screen
var AEHUDMenu               myMenu;

// Inventory for different items we are using
var AEInventory             myItemInventory;

// Responsible for generating weapons.
var AEWeaponCreator         myWeaponCreator;

// Network module used to gain weapon info from server.
var AETcpLinkClient         myTcpLink;

// Character that the player controls.
var AEPawn_Player           myPawn;

// Mission module that initialize mission and spawns it's objectives.
var AEMissionObjective      myMissionObjective;

var string parsing;

// Initializations before any pawns spawn on the map.
simulated event PostBeginPlay()
{
	// Initializations of various variables.
	super.PostBeginPlay();

	myTcpLink = Spawn(class'AETcpLinkClient');
	myTcpLink.PC = self;

	myWeaponCreator = Spawn(class'AEWeaponCreator');
	myWeaponCreator.PC = self; 

	myMissionObjective = Spawn(class'AEMissionObjective');
	myMissionObjective.PC = self;

	myItemInventory = Spawn(class'AEInventory');
	myItemInventory.PC = self;
	myItemInventory.AddItem(Spawn(class'AEInventory_Item_HealthPack'));
	myItemInventory.AddItem(Spawn(class'AEInventory_Item_Granade'));

	myMenu = Spawn(class'AEHUDMenu');
	myMenu.PC = self;

	parser = new pars;

	// Connect to server.
	//myTcpLink.ResolveMe();

}

function Tick(float DeltaTime)
{
	if (myHUD != none)
	{
		if (mHUD == none)
		{
			mHUD = AEHUD( myHUD );
		}
	}
}

exec function ppp()
{
	mHUD = AEHUD( myHUD );
	myMenu.ppp();
}

function getReward(int id)
{
	myTcpLink.getReward(id);
}

function serverWeaponCreator(string weap)
{
	addWeaponToInventory( myWeaponCreator.CreateWeaponFromString( weap ) );
}

function addWeaponToInventory(UTWeapon weap)
{
	myPawn.AddWeaponToInventory( weap );
}

function addReward(array<string> rewardArray)
{
	myMissionObjective.getReward(0);
}

/*
 * Console commands
 */
exec function logIn(string user, optional string password)
{
	if (mHUD == none)
	{
		mHUD = AEHUD(myHUD);
	}

	myTcpLink.logIn(user, password);
	mHUD.postError("Logging in...");
}

// Tells the TCPConnection to get Mission with a ID
exec function startMission(int id)
{
	myTcpLink.getMission(id);
}

// CONSOLE COMMAND: Generates a weapon.
exec function getWeapon(string type, float spread, int magazineSize, float reloadTime, float damage, float speed)
{
	local UTWeapon wep;
	wep = myWeaponCreator.CreateWeapon(type, spread, magazineSize, reloadTime, damage, speed);

	if (wep != none)
	{
		AddWeaponToInventory( wep );
	}
}

// CONSOLE COMMAND: Generates a weapon generated by information from the server.
exec function getServerWeapon(int id)
{
	myTcpLink.getWeapon(id);
}

exec function UseItem(int slot)
{
	if (mHUD == none)
	{
		mHUD = AEHUD(myHUD);
	}
	myItemInventory.Use(slot);
}



DefaultProperties
{
	InputClass = class'AEPlayerInput';
	pars = class'AEJSONParser'

	parsing = "[{\"category\":\"Search and destroy\",\"description\":\"Regain loot\",\"id\":1,\"title\":\"Marauders\",\"items\":[{\"properties\":{\"type\":\"rocket\",\"damage\":150,\"speed\":400,\"range\":1000,\"spread\":1.5,\"fire_rate\":3,\"clip_size\":1,\"reload_speed\":3,\"ammo_pool\":8},\"slot\":\"weapon\"}]},{\"category\":\"Search and destroy\",\"description\":\"Kill the robbers\",\"id\":2,\"title\":\"Bank robbers\",\"items\":[{\"properties\":{\"type\":\"linkgun\",\"damage\":20,\"speed\":2000,\"range\":1000,\"spread\":0.9,\"fire_rate\":1,\"clip_size\":30,\"reload_speed\":1,\"ammo_pool\":800},\"slot\":\"weapon\"}]},{\"category\":\"Search and Destroy\",\"description\":\"Kill the robbers\",\"id\":3,\"title\":\"Bank robbers\",\"items\":[{\"properties\":{\"type\":\"rocket\",\"damage\":100,\"speed\":2000,\"range\":1000,\"spread\":0,\"fire_rate\":0.01,\"clip_size\":1,\"reload_speed\":0.01,\"ammo_pool\":1000},\"slot\":\"weapon\"}]}]"
}